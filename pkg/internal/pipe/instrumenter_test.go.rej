diff a/pkg/internal/pipe/instrumenter_test.go b/pkg/internal/pipe/instrumenter_test.go	(rejected hunks)
@@ -124,7 +124,6 @@ func TestBasicPipeline(t *testing.T) {
 			string(semconv.ServiceNamespaceKey):     "ns",
 			string(semconv.TelemetrySDKLanguageKey): "go",
 			string(semconv.TelemetrySDKNameKey):     "beyla",
-			string(semconv.ProcessPIDKey):           "0",
 			string(semconv.OSTypeKey):               "linux",
 		},
 		Type:     pmetric.MetricTypeHistogram,
@@ -299,7 +298,6 @@ func TestRouteConsolidation(t *testing.T) {
 			string(semconv.ServiceNamespaceKey):     "ns",
 			string(semconv.TelemetrySDKLanguageKey): "go",
 			string(semconv.TelemetrySDKNameKey):     "beyla",
-			string(semconv.ProcessPIDKey):           "0",
 			string(semconv.OSTypeKey):               "linux",
 		},
 		Type:     pmetric.MetricTypeHistogram,
@@ -326,7 +324,6 @@ func TestRouteConsolidation(t *testing.T) {
 			string(semconv.ServiceNamespaceKey):     "ns",
 			string(semconv.TelemetrySDKLanguageKey): "go",
 			string(semconv.TelemetrySDKNameKey):     "beyla",
-			string(semconv.ProcessPIDKey):           "0",
 			string(semconv.OSTypeKey):               "linux",
 		},
 		Type:     pmetric.MetricTypeHistogram,
@@ -353,7 +350,6 @@ func TestRouteConsolidation(t *testing.T) {
 			string(semconv.ServiceNamespaceKey):     "ns",
 			string(semconv.TelemetrySDKLanguageKey): "go",
 			string(semconv.TelemetrySDKNameKey):     "beyla",
-			string(semconv.ProcessPIDKey):           "0",
 			string(semconv.OSTypeKey):               "linux",
 		},
 		Type:     pmetric.MetricTypeHistogram,
@@ -415,7 +411,6 @@ func TestGRPCPipeline(t *testing.T) {
 			string(semconv.ServiceNameKey):          "grpc-svc",
 			string(semconv.TelemetrySDKLanguageKey): "go",
 			string(semconv.TelemetrySDKNameKey):     "beyla",
-			string(semconv.ProcessPIDKey):           "0",
 			string(semconv.OSTypeKey):               "linux",
 		},
 		Type:     pmetric.MetricTypeHistogram,
@@ -510,7 +505,6 @@ func TestBasicPipelineInfo(t *testing.T) {
 			string(semconv.ServiceNameKey):          "comm",
 			string(semconv.TelemetrySDKLanguageKey): "go",
 			string(semconv.TelemetrySDKNameKey):     "beyla",
-			string(semconv.ProcessPIDKey):           "0",
 			string(semconv.OSTypeKey):               "linux",
 		},
 		Type:     pmetric.MetricTypeHistogram,
@@ -694,7 +688,6 @@ func matchTraceEvent(t require.TestingT, name string, event collector.TraceRecor
 			string(semconv.TelemetrySDKLanguageKey): "go",
 			string(semconv.TelemetrySDKNameKey):     "beyla",
 			string(semconv.OTelLibraryNameKey):      "github.com/grafana/beyla",
-			string(semconv.ProcessPIDKey):           "0",
 			string(semconv.OSTypeKey):               "linux",
 		},
 		Kind: ptrace.SpanKindServer,
@@ -720,7 +713,6 @@ func matchInnerTraceEvent(t require.TestingT, name string, event collector.Trace
 			string(semconv.TelemetrySDKLanguageKey): "go",
 			string(semconv.TelemetrySDKNameKey):     "beyla",
 			string(semconv.OTelLibraryNameKey):      "github.com/grafana/beyla",
-			string(semconv.ProcessPIDKey):           "0",
 			string(semconv.OSTypeKey):               "linux",
 		},
 		Kind: ptrace.SpanKindInternal,
@@ -750,7 +742,6 @@ func matchGRPCTraceEvent(t *testing.T, name string, event collector.TraceRecord)
 			string(semconv.TelemetrySDKLanguageKey): "go",
 			string(semconv.TelemetrySDKNameKey):     "beyla",
 			string(semconv.OTelLibraryNameKey):      "github.com/grafana/beyla",
-			string(semconv.ProcessPIDKey):           "0",
 			string(semconv.OSTypeKey):               "linux",
 		},
 		Kind: ptrace.SpanKindServer,
@@ -774,7 +765,6 @@ func matchInnerGRPCTraceEvent(t *testing.T, name string, event collector.TraceRe
 			string(semconv.TelemetrySDKLanguageKey): "go",
 			string(semconv.TelemetrySDKNameKey):     "beyla",
 			string(semconv.OTelLibraryNameKey):      "github.com/grafana/beyla",
-			string(semconv.ProcessPIDKey):           "0",
 			string(semconv.OSTypeKey):               "linux",
 		},
 		Kind: ptrace.SpanKindInternal,
@@ -834,7 +824,6 @@ func matchInfoEvent(t *testing.T, name string, event collector.TraceRecord) {
 			string(semconv.TelemetrySDKLanguageKey): "go",
 			string(semconv.TelemetrySDKNameKey):     "beyla",
 			string(semconv.OTelLibraryNameKey):      "github.com/grafana/beyla",
-			string(semconv.ProcessPIDKey):           "0",
 			string(semconv.OSTypeKey):               "linux",
 		},
 		Kind: ptrace.SpanKindServer,
