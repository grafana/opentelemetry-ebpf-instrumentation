diff a/pkg/export/otel/metrics.go b/pkg/export/otel/metrics.go	(rejected hunks)
@@ -175,8 +179,20 @@ func (m *MetricsConfig) EndpointEnabled() bool {
 	return m.CommonEndpoint != "" || m.MetricsEndpoint != "" || m.Grafana.MetricsEnabled()
 }
 
+func (m *MetricsConfig) AnySpanMetricsEnabled() bool {
+	return m.SpanMetricsEnabled() || m.ServiceGraphMetricsEnabled() || m.SpanMetricsSizesEnabled()
+}
+
+func (m *MetricsConfig) SpanMetricsSizesEnabled() bool {
+	return slices.Contains(m.Features, FeatureSpanSizes)
+}
+
 func (m *MetricsConfig) SpanMetricsEnabled() bool {
-	return slices.Contains(m.Features, FeatureSpan)
+	return slices.Contains(m.Features, FeatureSpan) || slices.Contains(m.Features, FeatureSpanOTel)
+}
+
+func (m *MetricsConfig) InvalidSpanMetricsConfig() bool {
+	return slices.Contains(m.Features, FeatureSpan) && slices.Contains(m.Features, FeatureSpanOTel)
 }
 
 func (m *MetricsConfig) ServiceGraphMetricsEnabled() bool {
@@ -817,6 +867,13 @@ func (mr *MetricsReporter) newMetricSet(service *svc.Attrs) (*Metrics, error) {
 		}
 	}
 
+	if mr.cfg.SpanMetricsSizesEnabled() {
+		err = mr.setupSpanSizeMeters(&m, meter)
+		if err != nil {
+			return nil, err
+		}
+	}
+
 	if mr.cfg.ServiceGraphMetricsEnabled() {
 		err = mr.setupGraphMeters(&m, meter)
 		if err != nil {
@@ -1148,7 +1207,7 @@ func (mr *MetricsReporter) deleteSurveyInfo(s *svc.Attrs) {
 }
 
 func (mr *MetricsReporter) createTracesTargetInfo(reporter *Metrics) {
-	if !mr.cfg.SpanMetricsEnabled() && !mr.cfg.ServiceGraphMetricsEnabled() {
+	if !mr.cfg.AnySpanMetricsEnabled() {
 		return
 	}
 	mlog().Debug("Creating traces_target_info")
@@ -1157,7 +1216,7 @@ func (mr *MetricsReporter) createTracesTargetInfo(reporter *Metrics) {
 }
 
 func (mr *MetricsReporter) deleteTracesTargetInfo(reporter *Metrics) {
-	if !mr.cfg.SpanMetricsEnabled() && !mr.cfg.ServiceGraphMetricsEnabled() {
+	if !mr.cfg.AnySpanMetricsEnabled() {
 		return
 	}
 	mlog().Debug("Deleting traces_target_info for", "attrs", reporter.resourceAttributes)
